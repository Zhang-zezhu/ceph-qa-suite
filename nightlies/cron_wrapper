#!/bin/bash
# /nightlies/cron_wrapper.sh

# check for no argument case and stop
if [ -z $1 ]; then
  echo "need argument"
  exit 1
fi

# set permanent $LOG file var
LOG="/var/log/crontab-nightlies-log/crontab.log"

# temp files to store sdtout and stderr
# named with the PID of this script in their name so they'll be unique
STDERR="/var/tmp/stderr.$$"
STDOUT="/var/tmp/stdout.$$"

# $STDOUT and $STDERR are removed when the script exits for any reason
trap  "rm -f $STDOUT $STDERR" 0

# lock $LOG with file descriptor 200
# if $LOC is locked by other process - wait for 420 sec
exec 200>>$LOG
# if flock failed, define a new $LOG and keep runing
flock 200 || LOG="/var/log/crontab-nightlies-log/crontab_lock_problem.log"


# log a name of the command about to be run
echo "Running command: $@" >> $LOG
# unlock 
flock -u 200

# run a command from this script's argument
# redirect stdout to $STDOUT file and redirect stderr to $STDERR file
"$@" > $STDOUT 2> $STDERR

# get return code from the command run
code=$?

if [ $code != 0 ] ; then
        # echoing to stdout/stderr makes cron send email
        echo "stdout:"
        cat $STDOUT
        echo "stderr:"
        cat $STDERR
else
        # normal exit: just log stdout
        DATE=$(date)
        # if flock failed, define a new $LOG and keep runing
        flock 200 || $LOG
        echo -n "$DATE: "  >> $LOG
        cat $STDOUT   >> $LOG
        # unlock 
        flock -u 200
fi
